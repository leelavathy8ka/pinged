curl -X GET https://api.company.com/user -H "Authorization: Bearer YOUR_SAML_ASSERTION"


# Define the URL and the SAML assertion
$url = "https://api.company.com/user" # Replace with the actual URL
$samlAssertion = "YOUR_SAML_ASSERTION" # Replace with your actual SAML assertion

# Make the GET request with the Authorization header
$response = Invoke-RestMethod -Uri $url -Headers @{Authorization = "Bearer $samlAssertion"} -Method Get

# Display the response
$response
$response = Invoke-RestMethod -Uri $url -Headers @{Authorization = "Bearer $samlAssertion"} -Method Get -Verbose

Invoke-RestMethod : The remote server returned an error: (401) Unauthorized.
At line:1 char:13
+ $response = Invoke-RestMethod -Uri $url -Headers @{Authorization = "B ...
+             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Net.HttpWebRequest:HttpWebRequest) [Invoke-RestMethod], WebExc
   eption
    + FullyQualifiedErrorId : WebCmdletWebResponseException,Microsoft.PowerShell.Commands.InvokeRestMethodCommand
# URL and headers
$url = "https://api.company.com/user" # Replace with actual URL
$headers = @{
    Authorization = "Bearer YOUR_SAML_ASSERTION" # Replace with actual SAML assertion
    "Content-Type" = "application/json"
    Accept = "application/json"
}

# Set the server certificate validation callback (optional, for testing only)
[System.Net.ServicePointManager]::ServerCertificateValidationCallback = { $true }

# Make the request with verbose output
try {
    $response = Invoke-RestMethod -Uri $url -Headers $headers -Method Get -Verbose
    $response
} catch {
    Write-Error "An error occurred: $_"
}
[System.Net.ServicePointManager]::ServerCertificateValidationCallback = { $true }
# Make the request with verbose output
try {
    $response = Invoke-RestMethod -Uri $url -Headers $headers -Method Get -Verbose
    $response
} catch {
    Write-Error "An error occurred: $_"
} : An error occurred: The underlying connection was closed: An unexpected error occurred on a send.
    + CategoryInfo          : NotSpecified: (:) [Write-Error], WriteErrorException
    + FullyQualifiedErrorId : Microsoft.PowerShell.Commands.WriteErrorException
# Configure TLS protocol
[System.Net.ServicePointManager]::SecurityProtocol = [System.Net.SecurityProtocolType]::Tls12

# (Optional) Ignore SSL certificate validation (for testing only)
[System.Net.ServicePointManager]::ServerCertificateValidationCallback = { $true }

# URL and headers
$url = "https://api.company.com/user" # Replace with the actual URL
$headers = @{
    Authorization = "Bearer YOUR_SAML_ASSERTION" # Replace with the actual SAML assertion
    "Content-Type" = "application/json"
    Accept = "application/json"
}

# Make the request with verbose output
try {
    $response = Invoke-RestMethod -Uri $url -Headers $headers -Method Get -Verbose
    $response
} catch {
    Write-Error "An error occurred: $_"
}
