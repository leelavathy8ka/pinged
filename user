API Design Document for SparkFlow Pipeline Trigger

Overview

The SparkFlow API provides a mechanism to trigger a pipeline execution in SparkFlow. This API requires authentication via a token and a secret key, which are securely stored in AWS Systems Manager Parameter Store.

API Details

Base URL
perl
Copy code
https://<your-domain>/api/sparkflow
Authentication
Type: Bearer Token
Token Source: Retrieved from AWS SSM Parameter Store
Secret Key Source: Retrieved from AWS SSM Parameter Store
Mechanism: The token and secret key are included in the Authorization header when making API requests.
Endpoints
1. Trigger Pipeline

Endpoint: /trigger
Method: POST
Description: This endpoint triggers a SparkFlow pipeline execution with the provided parameters.
Request
Headers:

http
Copy code
Authorization: Bearer <TokenId>
Content-Type: application/json
Body (JSON):

json
Copy code
{
  "username": "string",
  "password": "string",
  "workflowParameters": "string",
  "pipeline": "string",
  "projectId": "string"
}
Parameters:

username: The username for authentication in the SparkFlow system.
password: The encrypted password for authentication.
workflowParameters: The parameters required for the workflow execution.
pipeline: The name or identifier of the pipeline to be executed.
projectId: The identifier of the project under which the pipeline runs.
Response
Success Response:

Status Code: 200 OK
Body (JSON):
json
Copy code
{
  "executionId": "string",
  "status": "string",
  "message": "string"
}
Error Response:

Status Code: 4xx or 5xx
Body (JSON):
json
Copy code
{
  "error": "string",
  "message": "string"
}
Example Request
Request:

http
Copy code
POST https://<your-domain>/api/sparkflow/trigger
Authorization: Bearer <TokenId>
Content-Type: application/json

{
  "username": "user123",
  "password": "encrypted-password",
  "workflowParameters": "param1=value1,param2=value2",
  "pipeline": "examplePipeline",
  "projectId": "project123"
}
Example Response
Success:

json
Copy code
{
  "executionId": "exec-123456",
  "status": "SUCCESS",
  "message": "Pipeline triggered successfully."
}
Error:

json
Copy code
{
  "error": "Unauthorized",
  "message": "Invalid token or credentials."
}
Implementation Notes

Fetching Token and Secret Key from SSM
AWS SDK Integration: Use the AWS SDK for Java to retrieve the token and secret key from SSM Parameter Store.
Configuration: The application must have permissions to access the parameters in SSM. Define the parameters in SSM as follows:
/sparkflow/token: The token used for API authentication.
/sparkflow/secretKey: The secret key used for encrypting/decrypting passwords.
Security Considerations
Ensure that the AWS IAM role or user has the appropriate permissions to read parameters from the SSM Parameter Store.
Use HTTPS to encrypt data in transit.
Implement logging to monitor API usage and track errors.
Error Handling
Return appropriate HTTP status codes (e.g., 400 for bad requests, 401 for unauthorized, 500 for server errors).
Provide detailed error messages in the response body to facilitate troubleshooting.
Conclusion

This API design document outlines the specifications for the SparkFlow pipeline trigger API, including the authentication mechanism and data flow. By following these guidelines, developers can implement a secure and efficient way to trigger SparkFlow pipelines using the specified parameters.

Feel free to customize the document further based on your specific requirements or additional details you may want to include!





API Design Document: ExecutePipeline Action

Overview

The ExecutePipeline API enables users to trigger the execution of a specified pipeline in the SparkFlow system. Upon successful execution, the API returns an ExecutionID, which can be used to monitor the execution status of the pipeline.

API Details

Base URL
perl
Copy code
https://<your-domain>/api/pipeline
Authentication
Type: Bearer Token
Token Source: Retrieved from AWS Systems Manager (SSM) Parameter Store
Mechanism: The token must be included in the Authorization header for all requests.
Endpoints
1. Execute Pipeline

Endpoint: /execute
Method: POST
Description: This endpoint triggers the execution of a specified pipeline and returns the ExecutionID.
Request
Headers:

http
Copy code
Authorization: Bearer <TokenId>
Content-Type: application/json
Body (JSON):

json
Copy code
{
  "pipelineName": "string",
  "parameters": "string",
  "projectId": "string"
}
Parameters:

pipelineName: The name or identifier of the pipeline to execute.
parameters: The parameters required for the workflow execution, formatted as a string.
projectId: The identifier of the project under which the pipeline operates.
Response
Success Response:

Status Code: 200 OK
Body (JSON):
json
Copy code
{
  "executionId": "string",
  "status": "SUCCESS",
  "message": "Pipeline executed successfully."
}
Error Response:

Status Code: 400 Bad Request (for invalid input)
Body (JSON):
json
Copy code
{
  "error": "Invalid Input",
  "message": "The pipeline name, parameters, or project ID are missing or malformed."
}
Status Code: 401 Unauthorized (for invalid token)
Body (JSON):
json
Copy code
{
  "error": "Unauthorized",
  "message": "Invalid token or credentials."
}
Status Code: 500 Internal Server Error (for server-side issues)
Body (JSON):
json
Copy code
{
  "error": "Server Error",
  "message": "An unexpected error occurred while executing the pipeline."
}
Example Request
Request:

http
Copy code
POST https://<your-domain>/api/pipeline/execute
Authorization: Bearer <TokenId>
Content-Type: application/json

{
  "pipelineName": "dataProcessingPipeline",
  "parameters": "inputPath=/data/input,outputPath=/data/output",
  "projectId": "projectXYZ"
}
Example Response
Success:

json
Copy code
{
  "executionId": "exec-123456",
  "status": "SUCCESS",
  "message": "Pipeline executed successfully."
}
Error (Invalid Input):

json
Copy code
{
  "error": "Invalid Input",
  "message": "The pipeline name, parameters, or project ID are missing or malformed."
}
Implementation Notes

Fetching Token from SSM
AWS SDK Integration: Use the AWS SDK for Java to retrieve the token from SSM Parameter Store.
Parameter Configuration: Define the parameter in SSM:
/sparkflow/token: The token used for API authentication.
Security Considerations
Ensure that the AWS IAM role or user has the necessary permissions to read parameters from the SSM Parameter Store.
Use HTTPS to secure data in transit.
Implement logging to monitor API usage and track errors.
Error Handling
Return appropriate HTTP status codes for different error scenarios, such as 400, 401, and 500.
Provide meaningful error messages in the response body to aid in troubleshooting.
Conclusion

This API design document outlines the specifications for the ExecutePipeline action API. By adhering to these guidelines, developers can implement a secure and efficient mechanism for triggering pipeline executions and retrieving execution IDs. This facilitates integration with other systems and improves workflow management in the SparkFlow environment.






